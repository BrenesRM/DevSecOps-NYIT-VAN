# Use a minimal Python image with long-term support
FROM python:3.9-slim-bullseye

# Set a secure working directory
WORKDIR /app

# Create a non-root user for running the application
RUN addgroup --system appgroup && adduser --system --group appuser

# Copy dependency file first to leverage Docker caching
COPY requirements.txt /app/

# Install dependencies in a virtual environment
RUN python -m venv venv && \
    . venv/bin/activate && \
    pip install --no-cache-dir -r requirements.txt

# Copy the rest of the application code
COPY . /app

# Change ownership to the non-root user
RUN chown -R appuser:appgroup /app

# Set permissions to restrict execution
RUN chmod -R 750 /app

# Switch to non-root user
USER appuser

# Expose the required port (optional; can be set at runtime)
EXPOSE 5000

# Set the entrypoint to activate the virtual environment
ENTRYPOINT ["/bin/sh", "-c"]

# Run the application with a safer startup process
CMD [". venv/bin/activate && python init_db.py && python app.py"]
