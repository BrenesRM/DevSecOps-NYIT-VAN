name: Security Scan Workflow

on:
  push:
    branches:
      - main  # Trigger on pushes to the main branch
  pull_request:
    branches:
      - main  # Trigger on pull requests targeting the main branch

jobs:
  zap-api-scan:
    runs-on: ubuntu-latest  # Using an Ubuntu environment

    steps:
      # Step 1: Checkout code from the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up Docker (start Flask app in a Docker container)
      - name: Set up Docker
        run: |
          docker-compose up -d
          sleep 10  # Wait for the application to fully start

      # Step 3: Run OWASP ZAP API Scan on your Flask app
      - name: Run ZAP API Scan
        uses: zaproxy/action-api-scan@v0.7.0
        with:
          target: "http://localhost:5000"  # Your Flask app's endpoint
          format: "openapi"  # Assuming you have an OpenAPI spec
          fail_on_warn: true  # Fail the build on warnings (optional)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # GitHub token for authentication with ZAP

      # Optional Step: Clean up resources after scanning
      - name: Shut down Docker containers
        run: |
          docker-compose down
