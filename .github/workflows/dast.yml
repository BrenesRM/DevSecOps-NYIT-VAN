name: Security Dast Scan Workflow

on:
  push:
    branches:
      - main  # Trigger on pushes to the main branch
  pull_request:
    branches:
      - main  # Trigger on pull requests targeting the main branch

jobs:
  zap-api-scan:
    runs-on: ubuntu-latest  # Using an Ubuntu environment

    steps:
      # Step 1: Checkout code from the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up Docker (install Docker and Docker Compose)
      - name: Set up Docker
        run: |
          sudo apt-get update
          sudo apt-get install -y docker.io
          sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker --version  # Verify Docker is installed
          docker-compose --version  # Verify Docker Compose is installed

      # Step 3: Build and run Docker containers
      - name: Start target application
        run: |
          docker-compose up -d
          sleep 10  # Wait for the service to fully start

      # Step 4: Run ZAP API Scan
      - name: Run ZAP API Scan
        uses: zaproxy/action-api-scan@v0.7.0
        with:
          target: "http://localhost:5000"  # Your Flask app's endpoint
          format: "openapi"  # Assuming you have an OpenAPI spec
          fail_on_warn: true  # Fail the build on warnings (optional)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # GitHub token for authentication with ZAP

      # Optional Step: Clean up resources after scanning
      - name: Shut down Docker containers
        run: |
          docker-compose down
