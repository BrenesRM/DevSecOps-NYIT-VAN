name: PIPELINE-CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  DOCKER_REGISTRY: brenesrm
  IMAGE_NAME: devsecops-nyit-van
  PASSWORD: "PuraVida!"

jobs:
  build:
    name: Build Image
    runs-on: ubuntu-24.04
    permissions:
      security-events: write
      packages: read
      actions: read
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build & Push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ env.DOCKER_REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          build-args: |
            APP_ENV=${{ secrets.APP_ENV }}

      - name: Verify Docker image
        run: |
          docker pull ${{ env.DOCKER_REGISTRY }}/${{ env.IMAGE_NAME }}:latest

  dast:
    name: ZAP - DAST Test
    needs: build
    runs-on: ubuntu-latest
    permissions:
      issues: write
      security-events: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Dependencies
        run: |
          pip install -r requirements.txt

      - name: Start Flask App
        run: |
          python app.py &  
          sleep 10

      - name: Check if Flask is Running
        run: curl -I http://localhost:5000 || exit 1

      - name: Run ZAP Full Scan
        uses: zaproxy/action-full-scan@v0.10.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          target: 'http://localhost:5000'
          issue_title: 'ZAP Security Full Scan Findings'
          fail_action: false
          allow_issue_writing: true
          artifact_name: zap-scan-report

      - name: Upload ZAP Scan Artifact
        uses: actions/upload-artifact@v4
        with:
          name: zap-scan-report
          path: ./zap/reports

  CodeScan:
    permissions:
      contents: read
      security-events: write
      actions: read
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache files
        uses: actions/cache@v3
        with:
          path: |
            ~/.sonar
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Run Analysis
        uses: codescan-io/codescan-scanner-action@5b2e8c5683ef6a5adc8fa3b7950bb07debccce12
        with:
          login: ${{ secrets.CODESCAN_AUTH_TOKEN }}
          organization: ${{ secrets.CODESCAN_ORGANIZATION_KEY }}
          projectKey: ${{ secrets.CODESCAN_PROJECT_KEY }}

      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: codescan.sarif
