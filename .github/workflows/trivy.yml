name: Container Vulnerability Scanning Test
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  dockertest:
    name: Container Vulnerability Scanning Test
    needs: build
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # 1. Scan Docker image for vulnerabilities
      - name: Scan Docker image
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: ${{ env.DOCKER_REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          format: 'template'
          template: '@/contrib/sarif.tpl'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'

      # 2. Upload Trivy scan results to GitHub Security tab
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'

      # 3. Store Trivy results for future analysis
      - name: Save Trivy results as artifact
        uses: actions/upload-artifact@v4
        with:
          name: trivy-scan-results
          path: trivy-results.sarif
          retention-days: 30

      # 4. Generate a human-readable security report
      - name: Generate Security Report
        run: |
          jq '.' trivy-results.sarif > security-report.json
          cat security-report.json
        continue-on-error: true

      # 5. Upload security report as an artifact
      - name: Save Security Report
        uses: actions/upload-artifact@v4
        with:
          name: security-report
          path: security-report.json
          retention-days: 30

      # 6. Fail the workflow if critical vulnerabilities are found
      - name: Fail on Critical Vulnerabilities
        run: |
          if grep -q '"level": "error"' trivy-results.sarif; then
            echo "Critical vulnerabilities found! Failing the build."
            exit 1
          else
            echo "No critical vulnerabilities detected."
          fi
